procs:
  instructions:
    shell: |
      echo "CACvote Mark is where voters can cast their ballots."
      echo ""
      echo "\e[1mTips:\e[0m"
      echo "- Some steps need to be completed on CACvote JX Terminal,"
      echo "  which cannot run at the same time as CACvote Mark. To switch,"
      echo "  exit the current mprocs session and start the other one."
      echo "- Run the 'reset-db' process below to reset the database."
      echo "- To exit mprocs, type 'q' to quit and then 'y' to confirm."
      echo ""
      echo "The application will launch in 'kiosk-browser' when it's ready."
      sleep 30d

  cacvote-mark:
    cwd: 'apps/cacvote-mark/frontend'
    shell: |
      export EG_CLASSPATH=${EG_CLASSPATH:-../../../../egk-ec-mixnet/build/libs/egk-ec-mixnet-2.1-SNAPSHOT-uber.jar}
      pnpm tsc --build && pnpm start

  cacvote-server-backend:
    cwd: 'apps/cacvote-server/backend'
    shell: |
      export EG_CLASSPATH=${EG_CLASSPATH:-../../../../egk-ec-mixnet/build/libs/egk-ec-mixnet-2.1-SNAPSHOT-uber.jar}
      cargo watch -- cargo run

  kiosk-browser:
    cwd: '../kiosk-browser'
    shell: |
      echo "Waiting for CACvote Mark to startâ€¦"
      while ! nc -z localhost 3000; do sleep 1; done
      kiosk-browser http://localhost:3000/

  reset-db:
    cwd: 'apps/cacvote-mark/backend'
    autostart: false
    shell: |
      psql cacvote -c 'DELETE FROM scanned_mailing_label_codes; DELETE FROM machines; DELETE FROM journal_entries; DELETE FROM objects;'
      psql cacvote_jx -c 'DELETE FROM eg_private_keys; DELETE FROM journal_entries; DELETE FROM objects;'
      if [ -f dev-workspace/cacvote-mark.db ]; then
        sqlite3 dev-workspace/cacvote-mark.db 'DELETE FROM journal_entries; DELETE FROM objects;'
      fi
      echo "Database reset complete."
