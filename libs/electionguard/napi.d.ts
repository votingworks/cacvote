/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/**
 * Convert a VX election to an EG manifest. The return value is the EG manifest
 * as a POJO.
 */
export function convertVxElectionToEgManifest(vxElection: import('@votingworks/types').Election): import('./types').Manifest
export interface ElectionConfig {
  publicMetadataBlob: Buffer
  privateMetadataBlob: Buffer
}
export function generateElectionConfig(classpath: string, egManifest: import('./types').Manifest): ElectionConfig
/**
 * Convert a VX CVR to an EG plaintext ballot. The `vx_election` argument
 * must be the election that corresponds to the `vx_cvr` argument. The
 * `eg_manifest` argument must be the manifest that corresponds to the
 * `vx_election` argument. The return value is the EG plaintext ballot as a
 * POJO.
 */
export function convertVxCvrToEgPlaintextBallot(vxElection: import('@votingworks/types').Election, serialNumber: number, egManifest: import('./types').Manifest, vxCvr: import('@votingworks/types').CVR.CVR): import('./types').PlaintextBallot
/**
 * Encrypt an EG plaintext ballot using the ElectionGuard Java implementation.
 * The `classpath` argument should be the path to the ElectionGuard Java JAR
 * file.  The `public_metadata_blob` argument should be the public metadata
 * blob from the `ElectionConfig` struct. The return value is the encrypted
 * ballot as a POJO.
 */
export function encryptEgPlaintextBallot(classpath: string, publicMetadataBlob: Uint8Array, egPlaintextBallot: import('./types').PlaintextBallot, deviceName: string): import('./types').EncryptedBallot
/** Extract the ElectionGuard manifest from the public metadata blob. */
export function extractManifestFromPublicMetadataBlob(publicMetadataBlob: Uint8Array): import('./types').Manifest
