# THIS FILE IS GENERATED. DO NOT EDIT IT DIRECTLY.
# Run `pnpm -w generate-circleci-config` to regenerate it.

version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.3

executors:
  nodejs-browsers:
    docker:
      - image: votingworks/cimg-debian12-browsers:3.0.1
        auth:
          username: $VX_DOCKER_USERNAME
          password: $VX_DOCKER_PASSWORD
  nodejs:
    docker:
      - image: votingworks/cimg-debian12:3.0.1
        auth:
          username: $VX_DOCKER_USERNAME
          password: $VX_DOCKER_PASSWORD
  rust-db:
    docker:
      - image: votingworks/cimg-debian12:3.0.1
        auth:
          username: $VX_DOCKER_USERNAME
          password: $VX_DOCKER_PASSWORD
        environment:
          DATABASE_URL: postgresql://root@localhost:5432/cacvote-test
      - image: cimg/postgres:15.6
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: cacvote-test

jobs:
  # @votingworks/cacvote-jx-terminal-frontend
  test-apps-cacvote-jx-terminal-frontend:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/cacvote-jx-terminal/frontend build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/cacvote-jx-terminal/frontend lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/cacvote-jx-terminal/frontend test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: apps/cacvote-jx-terminal/frontend/reports/

  # @votingworks/cacvote-mark-backend
  test-apps-cacvote-mark-backend:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/cacvote-mark/backend build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/cacvote-mark/backend lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/cacvote-mark/backend test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: apps/cacvote-mark/backend/reports/

  # @votingworks/cacvote-mark-frontend
  test-apps-cacvote-mark-frontend:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/cacvote-mark/frontend build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/cacvote-mark/frontend lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/cacvote-mark/frontend test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: apps/cacvote-mark/frontend/reports/

  # @votingworks/cacvote-server-frontend
  test-apps-cacvote-server-frontend:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/cacvote-server/frontend build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/cacvote-server/frontend lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/cacvote-server/frontend test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: apps/cacvote-server/frontend/reports/

  # @votingworks/exercises
  test-docs-exercises:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir docs/exercises build
      - run:
          name: Lint
          command: |
            pnpm --dir docs/exercises lint
      - run:
          name: Test
          command: |
            pnpm --dir docs/exercises test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: docs/exercises/reports/

  # @votingworks/auth
  test-libs-auth:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/auth build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/auth lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/auth test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/auth/reports/

  # @votingworks/backend
  test-libs-backend:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/backend build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/backend lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/backend test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/backend/reports/

  # @votingworks/ballot-encoder
  test-libs-ballot-encoder:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/ballot-encoder build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/ballot-encoder lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/ballot-encoder test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/ballot-encoder/reports/

  # @votingworks/basics
  test-libs-basics:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/basics build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/basics lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/basics test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/basics/reports/

  # @votingworks/cdf-schema-builder
  test-libs-cdf-schema-builder:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/cdf-schema-builder build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/cdf-schema-builder lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/cdf-schema-builder test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/cdf-schema-builder/reports/

  # @votingworks/db
  test-libs-db:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/db build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/db lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/db test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/db/reports/

  # @votingworks/dev-dock-backend
  test-libs-dev-dock-backend:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/dev-dock/backend build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/dev-dock/backend lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/dev-dock/backend test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/dev-dock/backend/reports/

  # @votingworks/dev-dock-frontend
  test-libs-dev-dock-frontend:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/dev-dock/frontend build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/dev-dock/frontend lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/dev-dock/frontend test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/dev-dock/frontend/reports/

  # @votingworks/electionguard
  test-libs-electionguard:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/electionguard build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/electionguard lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/electionguard test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/electionguard/reports/

  # eslint-plugin-vx
  test-libs-eslint-plugin-vx:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/eslint-plugin-vx build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/eslint-plugin-vx lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/eslint-plugin-vx test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/eslint-plugin-vx/reports/

  # @votingworks/fixtures
  test-libs-fixtures:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/fixtures build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/fixtures lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/fixtures test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/fixtures/reports/

  # @votingworks/fs
  test-libs-fs:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/fs build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/fs lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/fs test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/fs/reports/

  # @votingworks/grout
  test-libs-grout:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/grout build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/grout lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/grout test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/grout/reports/

  # @votingworks/grout-test-utils
  test-libs-grout-test-utils:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/grout/test-utils build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/grout/test-utils lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/grout/test-utils test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/grout/test-utils/reports/

  # @votingworks/image-utils
  test-libs-image-utils:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/image-utils build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/image-utils lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/image-utils test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/image-utils/reports/

  # @votingworks/logging
  test-libs-logging:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/logging build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/logging lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/logging test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/logging/reports/

  # @votingworks/mark-flow-ui
  test-libs-mark-flow-ui:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/mark-flow-ui build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/mark-flow-ui lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/mark-flow-ui test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/mark-flow-ui/reports/

  # @votingworks/monorepo-utils
  test-libs-monorepo-utils:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/monorepo-utils build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/monorepo-utils lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/monorepo-utils test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/monorepo-utils/reports/

  # @votingworks/printing
  test-libs-printing:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/printing build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/printing lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/printing test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/printing/reports/

  # @votingworks/res-to-ts
  test-libs-res-to-ts:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/res-to-ts build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/res-to-ts lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/res-to-ts test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/res-to-ts/reports/

  # @votingworks/test-utils
  test-libs-test-utils:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/test-utils build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/test-utils lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/test-utils test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/test-utils/reports/

  # @votingworks/types
  test-libs-types:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/types build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/types lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/types test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/types/reports/

  # @votingworks/ui
  test-libs-ui:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/ui build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/ui lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/ui test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/ui/reports/

  # @votingworks/usb-drive
  test-libs-usb-drive:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/usb-drive build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/usb-drive lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/usb-drive test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/usb-drive/reports/

  # @votingworks/utils
  test-libs-utils:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/utils build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/utils lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/utils test
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: libs/utils/reports/

  test-crate-auth-rs:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            cargo build -p auth-rs
      - run:
          name: Test
          command: |
            cargo test -p auth-rs

  test-crate-cacvote-jx-terminal-backend:
    executor: rust-db
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Setup Database
          command: |
            cargo install sqlx-cli
            script/migrate-db
      - run:
          name: Build
          command: |
            cargo build -p cacvote-jx-terminal-backend
      - run:
          name: Test
          command: |
            cargo test -p cacvote-jx-terminal-backend

  test-crate-cacvote-server:
    executor: rust-db
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Setup Database
          command: |
            cargo install sqlx-cli
            script/migrate-db
      - run:
          name: Build
          command: |
            cargo build -p cacvote-server
      - run:
          name: Test
          command: |
            cargo test -p cacvote-server

  test-crate-electionguard:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            cargo build -p electionguard
      - run:
          name: Test
          command: |
            cargo test -p electionguard

  test-crate-electionguard-rs:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            cargo build -p electionguard-rs
      - run:
          name: Test
          command: |
            cargo test -p electionguard-rs

  test-crate-tlv:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            cargo build -p tlv
      - run:
          name: Test
          command: |
            cargo test -p tlv

  test-crate-tlv-derive:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            cargo build -p tlv-derive
      - run:
          name: Test
          command: |
            cargo test -p tlv-derive

  test-crate-types-rs:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            cargo build -p types-rs
      - run:
          name: Test
          command: |
            cargo test -p types-rs

  test-crate-vx-logging:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            cargo build -p vx-logging
      - run:
          name: Test
          command: |
            cargo test -p vx-logging

  validate-monorepo:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir script build
      - run:
          name: Validate
          command: |
            ./script/validate-monorepo

workflows:
  test:
    jobs:
      - test-apps-cacvote-jx-terminal-frontend
      - test-apps-cacvote-mark-backend
      - test-apps-cacvote-mark-frontend
      - test-apps-cacvote-server-frontend
      - test-docs-exercises
      - test-libs-auth
      - test-libs-backend
      - test-libs-ballot-encoder
      - test-libs-basics
      - test-libs-cdf-schema-builder
      - test-libs-db
      - test-libs-dev-dock-backend
      - test-libs-dev-dock-frontend
      - test-libs-electionguard
      - test-libs-eslint-plugin-vx
      - test-libs-fixtures
      - test-libs-fs
      - test-libs-grout
      - test-libs-grout-test-utils
      - test-libs-image-utils
      - test-libs-logging
      - test-libs-mark-flow-ui
      - test-libs-monorepo-utils
      - test-libs-printing
      - test-libs-res-to-ts
      - test-libs-test-utils
      - test-libs-types
      - test-libs-ui
      - test-libs-usb-drive
      - test-libs-utils
      - test-crate-auth-rs
      - test-crate-cacvote-jx-terminal-backend
      - test-crate-cacvote-server
      - test-crate-electionguard
      - test-crate-electionguard-rs
      - test-crate-tlv
      - test-crate-tlv-derive
      - test-crate-types-rs
      - test-crate-vx-logging
      - validate-monorepo

commands:
  checkout-and-install:
    description: Get the code and install dependencies.
    steps:
      - run:
          name: Ensure rust is in the PATH variable
          command: |
            echo 'export PATH="/root/.cargo/bin:$PATH"' >> $BASH_ENV
      - checkout
      # Edit this comment somehow in order to invalidate the CircleCI cache.
      # Since the contents of this file affect the cache key, editing only a
      # comment will invalidate the cache without changing the behavior.
      # last edited by Ben 2023-11-17
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum
            "pnpm-lock.yaml" }}
      - run:
          name: Install OpenSSL
          command: |
            apt-get update
            apt-get install libssl-dev -y
      - run:
          name: Update Rust
          command: |
            rustup update stable
            rustup default stable
      - run:
          name: Setup Dependencies
          command: |
            pnpm install --frozen-lockfile
            pnpm --recursive install:rust-addon
            pnpm --recursive build:rust-addon
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum
            "pnpm-lock.yaml" }}
          paths:
            - /root/.local/share/pnpm/store/v3
            - /root/.cache/ms-playwright
            - /root/.cargo
