msc {
    js [ label="Jurisdiction Station", textbgcolor="red", textcolor="white" ],
    s [ label="Server", textbgcolor="yellow" ],
    vs [ label="Voter Station", textbgcolor="green" ];

    vs rbox vs   [ label="Load user info from CAC cert" ];
    vs rbox vs   [ label="Prompt for user jurisdiction" ];
    vs rbox vs   [ label="Sign registration request with CAC" ];
    vs rbox vs   [ label="VoterInfo=(name,email,address,CAC ID)" ];

    vs=>s   [ label="REGISTER\nSigCAC(VoterInfo, Jx),\nCACCert" ];

    s rbox s   [ label="Verify CAC sig & cert" ];

    s=>vs   [ label="Registration Request ID" ];

    |||;

    js abox s   [ label="sync protocol based on Jx and last updated\nyields registration request IDs" ];

    js=>s   [ label="GET REGISTRATION\nREQUEST by ID" ];
    s=>js   [ label="\nSigCAC(VoterInfo, Jx),CACCert" ];
    js rbox js   [ label="Verify CAC sig & cert" ];
    js rbox js   [ label="check against VRDB, approve" ];
    js rbox js   [ label="assign ballot style" ];    

    js=>s   [ label="APPROVE REGISTRATION\nSigJS(CAC ID, Elec ID, Ballot Style), JSCert" ];

    s rbox s   [ label="Verify JS sig & cert" ] ;

    |||;

    s abox vs   [ label="sync protocol based on last updated\nyields registration IDs" ];

    vs=>s   [ label="GET REGISTRATION by ID\nSigVS(timestamp, Reg ID),VSCert" ];

    s rbox s   [ label="Verify timestamp freshness, VS sig and cert" ];
    
    s=>vs   [ label="\nSigJS(CAC ID, Elec ID, Ballot Style), JSCert" ];

    vs rbox vs   [ label="Verify JS sig & cert" ] ;
}
