procs:
  instructions:
    shell: |
      echo "CACvote JX Terminal is where jurisdiction admins can manage elections."
      echo ""
      echo "\e[1mTips:\e[0m"
      echo "- Voting is done on CACvote Mark, not here. However, you must use this"
      echo "  to set up the election and link a voter to it. CACvote Mark may not be"
      echo "  run at the same time as CACvote JX Terminal. To switch, exit the current"
      echo "  mprocs session and start the other one."
      echo "- Run the 'reset-db' process below to reset the database."
      echo "- To exit mprocs, type 'q' to quit and then 'y' to confirm."
      echo ""
      echo "The application will launch in 'kiosk-browser' when it's ready."
      sleep 30d

  cacvote-jx-backend:
    cwd: 'apps/cacvote-jx-terminal/backend'
    shell: |
      export EG_CLASSPATH=${EG_CLASSPATH:-../../../../egk-ec-mixnet/build/libs/egk-ec-mixnet-2.1-SNAPSHOT-uber.jar}
      cargo watch -- cargo run --bin cacvote-jx-terminal-backend

  cacvote-jx-frontend:
    cwd: 'apps/cacvote-jx-terminal/frontend'
    shell: 'pnpm start'

  cacvote-server-backend:
    cwd: 'apps/cacvote-server/backend'
    shell: |
      export EG_CLASSPATH=${EG_CLASSPATH:-../../../../egk-ec-mixnet/build/libs/egk-ec-mixnet-2.1-SNAPSHOT-uber.jar}
      cargo watch -- cargo run

  kiosk-browser:
    cwd: '../kiosk-browser'
    shell: |
      echo "Waiting for CACvote JX Terminal to startâ€¦"
      while ! curl --silent --fail localhost:5000/api/status; do sleep 1; done
      kiosk-browser \
        --allow-devtools \
        -v 'o=http://localhost:*,p=**/*,rw' \
        http://localhost:5000/

  reset-db:
    cwd: 'apps/cacvote-mark/backend'
    autostart: false
    shell: |
      psql cacvote -c 'DELETE FROM scanned_mailing_label_codes; DELETE FROM machines; DELETE FROM journal_entries; DELETE FROM objects;'
      psql cacvote_jx -c 'DELETE FROM eg_private_keys; DELETE FROM journal_entries; DELETE FROM objects;'
      if [ -f dev-workspace/cacvote-mark.db ]; then
        sqlite3 dev-workspace/cacvote-mark.db 'DELETE FROM journal_entries; DELETE FROM objects;'
      fi
      echo "Database reset complete."
